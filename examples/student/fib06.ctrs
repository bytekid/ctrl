THEORY ints     ;
LOGIC QF_LIA    ;
SOLVER internal ;

SIGNATURE fib, fastfib, u : Int * Int * Int * Int * Int => Unit, v, w, return, !INTEGER ;

RULES
  fib(x)        -> return(0)                  [x <= 0]                     ;   
  fib(1)        -> return(1)                                               ;   
  fib(x)        -> w(fib(x - 1), fib(x - 2))  [x - 2 >= 0]                 ;
  w(return(x), return(y)) -> return(x + y)                                 ;   
  fastfib(n)    -> u(n, rnd1, rnd2, 1, 0)                                  ;
  u(n,i,fb,p,q) -> return(0)                  [n < 1]                      ;
  u(n,i,fb,p,q) -> return(1)                  [not (n < 1) /\ n = 1]       ;
  u(n,i,fb,p,q) -> v(n,2,fb,p,q)              [not (n < 1) /\ not (n = 1)] ;
  v(n,i,fb,p,q) -> v(n,i + 1,p + q,p + q,p)   [i <= n]                     ;
  v(n,i,fb,p,q) -> return(fb)                 [not (i <= n)]               ;

QUERY equivalence fib(n) -><- fastfib(n) [true]

END OF FILE

Student program:

int fastfib(int n)
{
  int i, fib, p = 1, q = 0;
  if(n < 1){
    return 0;
  }else if(n == 1){
    return 1;
  }else{
    for(i = 2; i <= n; i++){
      fib = p + q;
      q = p;
      p = fib;
      
    }
    return fib;
  }
}

