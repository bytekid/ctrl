INCLUDE ints ;

DECLARE
  !BITVECTOR : (BitVec _)                             ;
  !=          : (BitVec _) * (BitVec _) => Bool (infix 70)    ;
  i<=         : (BitVec _) * (BitVec _) => Bool (infix 70)    ;
  i>=         : (BitVec _) * (BitVec _) => Bool (infix 70)    ;
  i<          : (BitVec _) * (BitVec _) => Bool (infix 70)    ;
  i>          : (BitVec _) * (BitVec _) => Bool (infix 70)    ;
  u<=         : (BitVec _) * (BitVec _) => Bool (infix 70)    ;
  u>=         : (BitVec _) * (BitVec _) => Bool (infix 70)    ;
  u<          : (BitVec _) * (BitVec _) => Bool (infix 70)    ;
  u>          : (BitVec _) * (BitVec _) => Bool (infix 70)    ;

  ~           : (BitVec _) => (BitVec _);
  &           : (BitVec _) * (BitVec _) => (BitVec _) (l-infix 150) ;
  |           : (BitVec _) * (BitVec _) => (BitVec _) (l-infix 100) ;
  ^           : (BitVec _) * (BitVec _) => (BitVec _) (l-infix 100) ;

  neg         : (BitVec _) => (BitVec _);
  +i          : (BitVec _) * (BitVec _) => (BitVec _) (l-infix 100);
  -i          : (BitVec _) * (BitVec _) => (BitVec _) (l-infix 100);
  <<          : (BitVec _) * (BitVec _) => (BitVec _) (r-infix 100);

  #x0: (BitVec _);
  #x1: (BitVec _);
  #xff: (BitVec _);

  absbv : (BitVec _) => (BitVec _) ;
  ashr_th : (BitVec _) * (BitVec _) => (BitVec _);
  computeKnownZeroBits : (BitVec _) => (BitVec _);
  countLeadingZeros : (BitVec _) => (BitVec _);
  countTrailingZeros : (BitVec _) => (BitVec _);
  hasOneUse : Bool;
  isPowerOf2 : (BitVec _) => Bool;
  isPowerOf2OrZero : (BitVec _) => Bool;
  isShiftedMask : (BitVec _) => Bool;
  isSignBit : (BitVec _) => Bool;
  lshr_th : (BitVec _) * (BitVec _) => (BitVec _);
  log2 : (BitVec _) => (BitVec _);
  MaskedValueIsZero : (BitVec _) * (BitVec _) => Bool;
  sext : (BitVec _) => (BitVec _);
  sext_i1 : (BitVec _) => (BitVec _);
  trunc : (BitVec _) => (BitVec _);
  umax : (BitVec _) * (BitVec _) => (BitVec _);
  width : (BitVec _) => (BitVec _);
  WillNotOverflowSignedAdd : (BitVec _) * (BitVec _) => Bool;
  WillNotOverflowSignedSub : (BitVec _) * (BitVec _) => Bool;
  WillNotOverflowUnsignedAdd : (BitVec _) * (BitVec _) => Bool;
  WillNotOverflowUnsignedSub : (BitVec _) * (BitVec _) => Bool;
  zext_i1 : (BitVec _) => (BitVec _);

SMT-RENAMINGS
  i< 		-> bvslt;
  i<=  	-> bvsle;
  i> 		-> bvsgt;
  i>=  	-> bvsge;
  u< 		-> bvult;
  u<=  	-> bvule;
  u> 		-> bvugt;
  u>=  	-> bvuge;

  +i 		-> bvadd;
  -i  	-> bvsub;

  ~  	-> bvnot;
  &  	-> bvand;
  |  	-> bvor;

SMT-TRANSLATIONS
  !=(x, y) -> (not (= x y));
